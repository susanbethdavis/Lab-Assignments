#3
filter(complete.cases(.)) %>%
#4
group_by(origin,dest,carrier) %>%
#5
summarize(
count=n(),
mean.acc=mean(accuracy),
var.acc= sd(accuracy),
mean.dist= mean(distance)
) %>%
#6
filter(n() <= 10) %>%
#7
ungroup() %>%
#8
mutate(proportion= mean(n() >= 10))
head(flight.summary) #DO NOT CHANGE THIS LINE OF CODE
ggplot(data=flight.summary) +
geom_point(mapping = aes(x = mean.dist, y = mean.acc, color = origin))+
geom_smooth(mapping = aes(x = mean.dist, y = mean.acc, color = origin), se = FALSE)
ggplot(data=filter(flight.summary,mean.dist < 3000), mapping = aes(x = mean.dist, y = mean.acc) +
geom_point( aes(color = origin)) +
geom_smooth(aes(color = origin), se = FALSE))
ggplot(data=filter(flight.summary,mean.dist < 3000), mapping = aes(x = mean.dist, y = mean.acc)) +
geom_point( aes(color = origin)) +
geom_smooth(aes(color = origin), se = FALSE))
ggplot(data=filter(flight.summary,mean.dist < 3000)) +
geom_point(mapping = aes(x = mean.dist, y = mean.acc, color = origin)) +
geom_smooth(mapping = aes(x = mean.dist, y = mean.acc, color = origin), method = lm, se = FALSE)
ggplot(data=flight.summary) +
geom_point(mapping = aes(x = mean.dist, y = mean.acc, color = origin))+
geom_smooth(mapping = aes(x = mean.dist, y = mean.acc, color = origin),method = lm, se = FALSE)
ggplot(data=flight.summary) +
geom_point(mapping = aes(x = mean.dist, y = mean.acc, color = origin), shape = '+')+
geom_smooth(mapping = aes(x = mean.dist, y = mean.acc, color = origin),method = lm, se = FALSE)
ggplot(data=filter(flight.summary,mean.dist < 3000)) +
geom_point(mapping = aes(x = mean.dist, y = mean.acc, color = origin), shape = '+') +
geom_smooth(mapping = aes(x = mean.dist, y = mean.acc, color = origin), method = lm, se = FALSE)
ggplot(data=filter(flight.summary,mean.dist < 3000)) +
geom_point(mapping = aes(x = mean.dist, y = mean.acc, color = origin)) +
geom_smooth(mapping = aes(x = mean.dist, y = mean.acc, color = origin), method = lm, se = FALSE)
flight.summary2 =
flight.summary %>%
mutate(rank=min_rank(mean.acc)) %>%
filter(min_rank(mean.acc)<=5 | min_rank(desc(mean.acc))<=5) %>%
arrange(rank)
ggplot(data=flight.summary) +
geom_point(mapping = aes(x = mean.dist, y = mean.acc, color = origin))+
geom_smooth(mapping = aes(x = mean.dist, y = mean.acc, color = origin),method = lm, se = FALSE)
flights
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)    #Loads the tidyverse suite of packages
library(nycflights13) #Contains Flight Data
library(knitr)        #kable() for HTML Tables
library(kableExtra)   #HTML Table Styling
flights
print(getwd())
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)    #Loads the tidyverse suite of packages
library(nycflights13) #Contains Flight Data
library(knitr)        #kable() for HTML Tables
library(kableExtra)   #HTML Table Styling
flights
print(getwd())
flight.summary2 =
flight.summary %>%
mutate(rank=min_rank(mean.acc)) %>%
filter(min_rank(mean.acc)<=5 | min_rank(desc(mean.acc))<=5) %>%
arrange(rank)
flight.summary =
#1
flights %>%
#2
mutate(
dep_min       = (dep_time%/%100)*60+dep_time%%100,
sched_dep_min = (sched_dep_time%/%100)*60+sched_dep_time%%100,
arr_min       = (arr_time%/%100)*60+arr_time%%100,
sched_arr_min = (sched_arr_time%/%100)*60+sched_arr_time%%100,
dep_delay_min = dep_min-sched_dep_min,
arr_delay_min = arr_min-sched_arr_min,
accuracy      = abs(dep_delay_min) + abs(arr_delay_min)
) %>%
#3
filter(complete.cases(.)) %>%
#4
group_by(origin,dest,carrier) %>%
#5
summarize(
count=n(),
mean.acc=mean(accuracy),
var.acc= sd(accuracy),
mean.dist= mean(distance)
) %>%
#6
filter(n() <= 10) %>%
#7
ungroup() %>%
#8
mutate(proportion= mean(n() >= 10))
head(flight.summary) #DO NOT CHANGE THIS LINE OF CODE
ggplot(data=flight.summary) +
geom_point(mapping = aes(x = mean.dist, y = mean.acc, color = origin))+
geom_smooth(mapping = aes(x = mean.dist, y = mean.acc, color = origin),method = lm, se = FALSE)
ggplot(data=filter(flight.summary,mean.dist < 3000)) +
geom_point(mapping = aes(x = mean.dist, y = mean.acc, color = origin)) +
geom_smooth(mapping = aes(x = mean.dist, y = mean.acc, color = origin), method = lm, se = FALSE)
flight.summary2 =
flight.summary %>%
mutate(rank=min_rank(mean.acc)) %>%
filter(min_rank(mean.acc)<=5 | min_rank(desc(mean.acc))<=5) %>%
arrange(rank)
flight.summary2 %>%
kbl() %>%
kable_material(c("striped", "hover"))
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)    #Loads the tidyverse suite of packages
library(nycflights13) #Contains Flight Data
library(knitr)        #kable() for HTML Tables
library(kableExtra)   #HTML Table Styling
flights
print(getwd())
flight.summary2 =
flight.summary %>%
mutate(rank=min_rank(mean.acc)) %>%
filter(min_rank(mean.acc)<=5 | min_rank(desc(mean.acc))<=5) %>%
arrange(rank)
flight.summary2 %>%
kbl() %>%
kable_material(c("striped", "hover"))
flight.summary2 =
flight.summary %>%
mutate(rank=min_rank(mean.acc)) %>%
filter(min_rank(mean.acc)<=5 | min_rank(desc(mean.acc))<=5) %>%
arrange(rank)
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)    #Loads the tidyverse suite of packages
library(nycflights13) #Contains Flight Data
library(knitr)        #kable() for HTML Tables
library(kableExtra)   #HTML Table Styling
flights
print(getwd())
flight.summary2 =
flight.summary %>%
mutate(rank=min_rank(mean.acc)) %>%
filter(min_rank(mean.acc)<=5 | min_rank(desc(mean.acc))<=5) %>%
arrange(rank)
flight.summary2 %>%
kbl() %>%
kable_material(c("striped", "hover"))
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)    #Loads the tidyverse suite of packages
library(nycflights13) #Contains Flight Data
library(knitr)        #kable() for HTML Tables
library(kableExtra)   #HTML Table Styling
flights
print(getwd())
flight.summary2 =
flight.summary %>%
mutate(rank=min_rank(mean.acc)) %>%
filter(min_rank(mean.acc)<=5 | min_rank(desc(mean.acc))<=5) %>%
arrange(rank)
flight.summary2 %>%
kbl() %>%
kable_material(c("striped", "hover"))
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)    #Loads the tidyverse suite of packages
library(nycflights13) #Contains Flight Data
library(knitr)        #kable() for HTML Tables
library(kableExtra)   #HTML Table Styling
flights
print(getwd())
ggplot(data=flight.summary) +
geom_point(mapping = aes(x = mean.dist, y = mean.acc, color = origin))+
geom_smooth(mapping = aes(x = mean.dist, y = mean.acc, color = origin),method = lm, se = FALSE)
View(flight.summary)
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)    #Loads the tidyverse suite of packages
library(nycflights13) #Contains Flight Data
library(knitr)        #kable() for HTML Tables
library(kableExtra)   #HTML Table Styling
flights
print(getwd())
ggplot(data=filter(flight.summary,mean.dist < 3000)) +
geom_point(mapping = aes(x = mean.dist, y = mean.acc, color = origin)) +
geom_smooth(mapping = aes(x = mean.dist, y = mean.acc, color = origin), method = lm, se = FALSE)
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)    #Loads the tidyverse suite of packages
library(nycflights13) #Contains Flight Data
library(knitr)        #kable() for HTML Tables
library(kableExtra)   #HTML Table Styling
flights
print(getwd())
flight.summary =
#1
flights %>%
#2
mutate(
dep_min       = (dep_time%/%100)*60+dep_time%%100,
sched_dep_min = (sched_dep_time%/%100)*60+sched_dep_time%%100,
arr_min       = (arr_time%/%100)*60+arr_time%%100,
sched_arr_min = (sched_arr_time%/%100)*60+sched_arr_time%%100,
dep_delay_min = dep_min-sched_dep_min,
arr_delay_min = arr_min-sched_arr_min,
accuracy      = abs(dep_delay_min) + abs(arr_delay_min)
) %>%
#3
filter(complete.cases(.)) %>%
#4
group_by(origin,dest,carrier) %>%
#5
summarize(
count=n(),
mean.acc=mean(accuracy),
var.acc= sd(accuracy),
mean.dist= mean(distance)
) %>%
#6
filter(n() <= 10) %>%
#7
ungroup() %>%
#8
mutate(proportion= mean(n() >= 10))
head(flight.summary) #DO NOT CHANGE THIS LINE OF CODE
ggplot(data=flight.summary) +
geom_point(mapping = aes(x = mean.dist, y = mean.acc, color = origin))+
geom_smooth(mapping = aes(x = mean.dist, y = mean.acc, color = origin),method = lm, se = FALSE)
ggplot(data=filter(flight.summary,mean.dist < 3000)) +
geom_point(mapping = aes(x = mean.dist, y = mean.acc, color = origin)) +
geom_smooth(mapping = aes(x = mean.dist, y = mean.acc, color = origin), method = lm, se = FALSE)
flight.summary2 =
flight.summary %>%
mutate(rank=min_rank(mean.acc)) %>%
filter(min_rank(mean.acc)<=5 | min_rank(desc(mean.acc))<=5) %>%
arrange(rank)
flight.summary2 %>%
kbl() %>%
kable_material(c("striped", "hover"))
flight.summary2 %>%
kbl() %>%
kable_material(c("striped", "hover"))
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)    #Loads the tidyverse suite of packages
library(Ecdat)        #Contains Wage Data
install.packages("Ecdat")
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)    #Loads the tidyverse suite of packages
library(Ecdat)        #Contains Wage Data
library(knitr)        #kable() for HTML Tables
head(Wages1)
wage=as.tibble(Wages1) %>%
rename(experience=exper) %>%
arrange(school)
head(wage)
ggplot(data = wage) +
geom_bar(mapping = aes(x = experience))
wage %>%
group_by(experience) %>%
count(exoerience)
wage %>%
group_by(experience) %>%
count(experience)
wage %>%
group_by(experience) %>%
desc(count(experience))
wage %>%
group_by(experience) %>%
count(experience)
wage %>%
group_by(experience) %>%
max(count(experience))
wage %>%
group_by(experience) %>%
count(experience)
ggplot(data = wage) +
geom_bar(mapping = aes( x = school))
wage %>%
group_by(school) %>%
count(school)
ggplot(data = wage) +
geom_point(mapping = aes(x = school ,y = experience))
ggplot(data = wage) +
geom_point(mapping = aes(x = school ,y = experience), alpha = 0.1)
ggplot(data = wage) +
geom_point(mapping = aes(x = school ,y = experience, , alpha = 0.1)
ggplot(data = wage) +
geom_point(mapping = aes(x = school ,y = experience, , alpha = 0.1))
ggplot(data = wage) +
geom_point(mapping = aes(x = school ,y = experience, alpha = 0.1))
ggplot(data = wage) +
geom_point(mapping = aes(x = school ,y = experience ), alpha = 0.1)
ggplot(data = wage) +
geom_point(mapping = aes(x = expereince ,y = school ), alpha = 0.1)
ggplot(data = wage) +
geom_point(mapping = aes(x = experience ,y = school ), alpha = 0.1)
ggplot(data = wage) +
geom_point(mapping = aes(x = school ,y = experience ), alpha = 0.1)
ggplot(data = wage) +
geom_freqpoly(mapping = aes(x = sex, y = sex))
ggplot(data = wage) +
geom_freqpoly(mapping = aes(x = sex))
ggplot(data = wage) +
geom_freqpoly(mapping = aes(x = wage, y = sex))
?geom_freqpoly
ggplot(data = wage) +
geom_freqpoly(mapping = aes(x = wage))
ggplot(data = wage) +
geom_freqpoly(mapping = aes(x = sex))
ggplot(data = wage) +
geom_freqpoly(mapping = aes(x = wage))
ggplot(data = group_by(wage,sex)) +
geom_freqpoly(mapping = aes(x = wage))
ggplot(data = group_by(wage,sex)) +
geom_freqpoly(mapping = aes(x = female))
ggplot(data = group_by(wage,sex)) +
geom_freqpoly(mapping = aes(x = wage))
ggplot(data = wage) +
geom_freqpoly(mapping = aes(x = wage), collor = sex)
ggplot(data = wage) +
geom_freqpoly(mapping = aes(x = wage), color = sex)
ggplot(data = wage) +
geom_freqpoly(mapping = aes(x = wage, color = sex))
wage %>%
group_by(experience) %>%
summarize(n = n())
wage %>%
group_by(school) %>%
summarize(n = n())
wage %>%
group_by(experience) %>%
summarize(n = n()) %%
arrange(n)
wage %>%
group_by(experience) %>%
summarize(n = n()) %%
arrange(desc(n)
wage %>%
group_by(experience) %>%
summarize(n = n()) %>%
arrange(desc(n)
wage %>%
group_by(experience) %>%
summarize(n = n()) %>%
arrange(desc(n))
wage %>%
group_by(school) %>%
summarize(n = n()) %>%
arrange(desc(n))
wage %>%
group_by(sex) %>%
summarize(n=n(),mean= wage,se=wage,
lb= 2.5,ub= 97.5)
wage %>%
group_by(sex) %>%
summarize(n=n(),mean= mean(wage),se= sd(wage)/sqrt(n()),
lb= 2.5,ub= 97.5)
wage %>%
group_by(sex) %>%
summarize(n=n(),mean= mean(wage),se= sd(wage)/sqrt(n()),
lb= mean - 2*se  ,ub= mean + 2*se)
wage %>%
group_by(sex) %>%
summarize(n=n(),mean=mean(wage),se=sd(wage)/sqrt(n),
lb=mean-2*se,ub=mean+2*se)
ggplot(data = wage) +
geom_point(x = experience, y = wage, color = sex)
ggplot(data = wage) +
geom_point(x = experience, y = wage, color = sex)
ggplot(data = wage) +
geom_point(x = experience, y = wage, color = sex)
ggplot(data = wage) +
geom_point(x = wage, y = wage, color = sex)
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)    #Loads the tidyverse suite of packages
library(Ecdat)        #Contains Wage Data
library(knitr)        #kable() for HTML Tables
head(Wages1)
wage=as.tibble(Wages1) %>%
rename(experience=exper) %>%
arrange(school)
head(wage)
ggplot(data = wage) +
geom_bar(mapping = aes(x = experience))
wage %>%
group_by(experience) %>%
summarize(n = n()) %>%
arrange(desc(n))
ggplot(data = wage) +
geom_bar(mapping = aes( x = school))
wage %>%
group_by(school) %>%
summarize(n = n()) %>%
arrange(desc(n))
ggplot(data = wage) +
geom_point(mapping = aes(x = school ,y = experience ), alpha = 0.1)
?geom_freqpoly
ggplot(data = wage) +
geom_freqpoly(mapping = aes(x = wage, color = sex))
wage %>%
group_by(sex) %>%
summarize(n=n(),mean=mean(wage),se=sd(wage)/sqrt(n),
lb=mean-2*se,ub=mean+2*se)
ggplot(data = wage) +
geom_point(x = experience, y = wage, color = sex)
ggplot(data = wage) +
geom_point(mapping = aes(x = experience, y = wage, color = sex))
ggplot(data = wage) +
geom_point(mapping = aes(x = school, y = wage, color = sex))
wage %>%
group_by(experience,school,sex) %>%
summarize(n=n(),mean=mean(wage)) %>%
ungroup() %>%
ggplot() +
geom_tile(aes(x=experience,y=school,fill=mean)) +
scale_fill_gradientn(colors=c("black","lightskyblue","white"))+
facet_grid(~sex) + theme_dark()
wage %>%
group_by(experience,school,sex) %>%
summarize(n=n(),sd=sd(wage)) %>%
ungroup() %>%
filter(n>10) %>%
ggplot() +
geom_tile(aes(x=experience,y=school,fill=sd)) +
scale_fill_gradientn(colors=c("black","lightskyblue","white"))+
facet_grid(~sex) + theme_dark()
wage %>%
group_by(sex) %>%
summarize(n=n(),mean= mean(wage),se= sd(wage)/sqrt(n()),
lb= mean - 2*se  ,ub= mean + 2*se)
wage %>%
group_by(sex) %>%
summarize(n=n(),mean= mean(wage),se= sd(wage)/sqrt(n()),
lb= mean - 2*se  ,ub= mean + 2*se)
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)    #Loads the tidyverse suite of packages
library(Ecdat)        #Contains Wage Data
library(knitr)        #kable() for HTML Tables
head(Wages1)
wage=as.tibble(Wages1) %>%
rename(experience=exper) %>%
arrange(school)
head(wage)
ggplot(data = wage) +
geom_bar(mapping = aes(x = experience))
wage %>%
group_by(experience) %>%
summarize(n = n()) %>%
arrange(desc(n))
ggplot(data = wage) +
geom_bar(mapping = aes( x = school))
wage %>%
group_by(school) %>%
summarize(n = n()) %>%
arrange(desc(n))
ggplot(data = wage) +
geom_point(mapping = aes(x = school ,y = experience ), alpha = 0.1)
?geom_freqpoly
ggplot(data = wage) +
geom_freqpoly(mapping = aes(x = wage, color = sex))
wage %>%
group_by(sex) %>%
summarize(n=n(),mean= mean(wage),se= sd(wage)/sqrt(n()),
lb= mean - 2*se  ,ub= mean + 2*se)
wage %>%
group_by(sex) %>%
summarize(n=n(),mean=mean(wage),se=sd(wage)/sqrt(n),
lb=mean-2*se,ub=mean+2*se)
ggplot(data = wage) +
geom_point(mapping = aes(x = experience, y = wage, color = sex))
ggplot(data = wage) +
geom_point(mapping = aes(x = school, y = wage, color = sex))
wage %>%
group_by(experience,school,sex) %>%
summarize(n=n(),mean=mean(wage)) %>%
ungroup() %>%
ggplot() +
geom_tile(aes(x=experience,y=school,fill=mean)) +
scale_fill_gradientn(colors=c("black","lightskyblue","white"))+
facet_grid(~sex) + theme_dark()
wage %>%
group_by(experience,school,sex) %>%
summarize(n=n(),sd=sd(wage)) %>%
ungroup() %>%
filter(n>10) %>%
ggplot() +
geom_tile(aes(x=experience,y=school,fill=sd)) +
scale_fill_gradientn(colors=c("black","lightskyblue","white"))+
facet_grid(~sex) + theme_dark()
